@inherits LayoutComponentBase

@inject HttpClient Http
@inject NavigationManager Navigation
@inject SignInManager<ApplicationUser> SignInManager

@using StellumbraSite.Data
@using System.Security.Claims
@using Microsoft.AspNetCore.Identity
@using StellumbraSite.Components.Text
@using Microsoft.AspNetCore.WebUtilities
@using StellumbraSite.Components.Buttons
@using StellumbraSite.Components.Hypertext

<main>
    @if (loginShown)
    {
        <div class="modal-overlay">
            <CustomFuncButton OnClick="() => ShowLogin(false)">
                X
            </CustomFuncButton>
            <LoginWidget OnLogin=OnUserLogin ReturnUrl=@Navigation.Uri/>
        </div>
    }

    @if (signupShown)
    {
        <div class="modal-overlay">
            <CustomFuncButton OnClick="() => ShowSignUp(false)">
                X
            </CustomFuncButton>
            <SignupWidget />
        </div>
    }

    <div class="crt-overlay forum-background">
        <div class="forum-navbar-background">
            <div style="display: flex; width: 100%;">
                <div style="width: 50%">
                    <CustomHypertext HasBlinkingUnderline=true Href="/">
                        <h2>[Logo] Cintech Studios</h2>
                    </CustomHypertext>
                </div>

                <AuthorizeView>
                    <Authorized>
                        <div style="display: flex; width: 50%; justify-content: right; align-items: center; gap: 1rem;">
                            <CustomHypertext HasBlinkingUnderline=true Href="/forum/profile-manager">
                                @context.User.Identity.Name
                            </CustomHypertext>
                            <CustomFuncButton OnClick="SignOut">
                                Sign out
                            </CustomFuncButton>
                        </div>
                    </Authorized>
                    <NotAuthorized>
                        <div style="display: flex; width: 50%; justify-content: right; align-items: center; gap: 1rem;">
                            <CustomFuncButton OnClick="() => ShowLogin(true)">
                                Log In
                            </CustomFuncButton>
                            <CustomFuncButton OnClick="() => ShowSignUp(true)">
                                Sign Up
                            </CustomFuncButton>
                        </div>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </div>
        @Body
    </div>

</main>

<footer>
    <div class="forum-footer-background crt-overlay">
    </div>
</footer>

@code {
    //[CascadingParameter]
    //private HttpContext HttpContext { get; set; } = default!;

    private bool loginShown;
    private bool signupShown;
    private bool userIsLogged;
    private string usernameLoggedIn;

    private Dictionary<string, string?> ReturnQueryString 
    {
        get => new Dictionary<string, string?>
        {
            { "ReturnUrl", Navigation.Uri }
        };
    }
    private void ShowLogin(bool shown)
    {
        //Navigation.NavigateTo(QueryHelpers.AddQueryString("/forum/login", ReturnQueryString), forceLoad: true);
        loginShown = shown;
    }
    private void ShowSignUp(bool shown)
    { 
        signupShown = shown;
    }
    private async Task OnUserLogin(string user)
    {
        userIsLogged = true;
        usernameLoggedIn = user;
        loginShown = false;
        Navigation.NavigateTo(Navigation.Uri, forceLoad: true);
    }
    private async Task SignOut()
    {
        userIsLogged = false;
        usernameLoggedIn = "";

        Navigation.NavigateTo(QueryHelpers.AddQueryString("/forum/logout", ReturnQueryString), forceLoad: true);
        //Navigation.NavigateTo(Navigation.Uri, forceLoad: true);
        //await Http.PostAsync("/api/Auth/Logout", null);
    }
}