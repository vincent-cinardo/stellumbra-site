@page "/forum/profile-manager"
@layout ForumLayout

@inject IJSRuntime JS
@inject HttpClient HttpClient
@inject AuthenticationStateProvider AuthenticationStateProvider

@using StellumbraSite.Data
@using System.Security.Claims
@using StellumbraSite.Helpers
@using StellumbraSite.Components.Text
@using StellumbraSite.Components.Buttons

<PageTitle>Profile-Manager</PageTitle>

@if (userIsLogged)
{
    <img width="48" height="48" src="@userData.ProfilePicturePath"/>
    <CustomUploadFileButton OnChange="HandleFileSelected">
        Upload Profile Picture
    </CustomUploadFileButton>

    <DosP>
        @postCount Posts
    </DosP>
    <DosP>
        @replyCount Replies
    </DosP>
}
else
{ 
    <p>Sign in to edit profile.</p>
}

@code {
    private UserData userData;
    private bool userIsLogged;
    private int postCount, replyCount;
    protected override async Task OnInitializedAsync()
    {
        userIsLogged = false;
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user != null && user.Identity.IsAuthenticated)
        {
            var userID = user.FindFirst(c => c.Type == ClaimTypes.NameIdentifier)?.Value;
            userData = await HttpClient.GetFromJsonAsync<UserData>($"/api/User/GetUserData/{userID}");
            postCount = await HttpClient.GetFromJsonAsync<int>($"/api/Post/GetUserPostCount/{userID}");
            replyCount = await HttpClient.GetFromJsonAsync<int>($"/api/Thread/GetUserReplyCount/{userID}");
            userIsLogged = true;
        }
    }
    private async void HandleFileSelected(InputFileChangeEventArgs args)
    {
        string filepath = await FileHelper.UploadImage(args.File, JS);
        userData.ProfilePicturePath = filepath;
        await HttpClient.PostAsJsonAsync($"/api/User/SetProfilePicture", userData);
    }
}