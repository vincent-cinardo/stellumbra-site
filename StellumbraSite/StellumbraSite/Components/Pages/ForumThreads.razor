@page "/forum/threads/{topicName}/{page:int}"
@layout ForumLayout

@inject HttpClient Http

@inject NavigationManager Navigate
@inject IOptions<CustomSettings> Config

@using System.Net;
@using StellumbraSite.Model
@using Microsoft.Extensions.Options
@using StellumbraSite.Components.Text
@using StellumbraSite.Components.Forum
@using StellumbraSite.Components.Shared
@using StellumbraSite.Components.Buttons
@using StellumbraSite.Components.Hypertext
@using Microsoft.AspNetCore.Components.Authorization

<ForumContentFrame>
    <CustomHypertext HasBlinkingArrow=true Href="/forum">
        Back to Home
    </CustomHypertext>
    <div>
        @if (forumTopic != null)
        {
            <h3 class="dos-font">@forumTopic.TopicShownName</h3>
        }
    </div>
    <div style="display:flex; margin-bottom: 1rem; align-items: flex-end;">
        <div style="display: flex; width: 50%; height: fit-content;">
            @if (forumTopic != null)
            {
                <DosP>@forumTopic.Description</DosP>
            }
        </div>
        <div style="display: flex; width: 50%; justify-content: right;">
            <AuthorizeView>
                <Authorized>
                    <CustomFuncButton OnClick="StartNewPost">Start New Post</CustomFuncButton>
                </Authorized>
                <NotAuthorized>
                    <DosP>Login to start new posts.</DosP>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </div>


    @if (threads != null)
    {
        @for (int i = 0; i < threads.Count; i++)
        {
            int index = i;
            @if (index == threads.Count - 1)
            {
                <ForumThreadComponent Style="@LastStyle" Thread="threads[index]" ReturnUrl="@Navigate.Uri" />
            }
            else
            {
                <ForumThreadComponent Style="@DefaultStyle" Thread="threads[index]" ReturnUrl="@Navigate.Uri" />
            }
        }
    }

    <Paginator itemsPerPage=pageSize
               itemCount=totalThreads
               pagesPerDirection=PAGES_PER_DIRECTION
               page=page
               pageRootPath=@($"/forum/threads/{topicName}") />
</ForumContentFrame>

@code {

    // TODO: These are reduntant see ForumThreads.razor
    private string DefaultStyle { get => "border-top: 2px solid #00ff58 !important;"; }
    private string LastStyle { get => "border-top: 2px solid #00ff58 !important; border-bottom: 2px solid #00ff58 !important;"; }

    private int pageSize;
    private const int PAGES_PER_DIRECTION = 3;
    private bool logged;

    [Parameter]
    public string topicName { get; set; }
    [Parameter]
    public int page { get; set; }

    private int totalThreads;
    private List<ForumThread> threads;
    private ForumTopic forumTopic;

    protected override async Task OnInitializedAsync()
    {
        pageSize = Config.Value.ForumPageSize;
        forumTopic = await Http.GetFromJsonAsync<ForumTopic>($"/api/Topic/GetTopic/{topicName}");
        totalThreads = await Http.GetFromJsonAsync<int>($"/api/Thread/GetThreadCount/{topicName}");
        threads = await Http.GetFromJsonAsync<List<ForumThread>>($"/api/Thread/GetThreads/{topicName}/{page}/{pageSize}");
    }
    private async Task StartNewPost()
    {
        string uri = Navigate.GetUriWithQueryParameters($"/forum/new-thread/{topicName}", new Dictionary<string, object?> { ["ReturnUrl"] = Navigate.Uri });
        Navigate.NavigateTo(uri, forceLoad: true);
    }
}