@page "/forum/posts/{topicName}/{page:int}"
@layout ForumLayout

@inject HttpClient Http

@inject NavigationManager Navigate
@inject IOptions<CustomSettings> Config

@using System.Net;
@using Microsoft.Extensions.Options
@using StellumbraSite.Shared.Model
@using StellumbraSite.Components.Shared
@using Microsoft.AspNetCore.Components.Authorization

@if (forumTopic != null)
{
    <h3>@forumTopic.TopicShownName</h3>
}

<AuthorizeView>
    <Authorized>
        <button type="button" @onclick="StartNewPost">Start New Post</button>
    </Authorized>
    <NotAuthorized>
        <p>Login to start new posts.</p>
    </NotAuthorized>
</AuthorizeView>

@if (posts != null)
{
    @foreach (var post in posts)
    {
        <div>
            <a href=@($"/forum/post-opened/{post.Id}/1")>
                <p>
                    @post.Title
                </p>
            </a>
        </div>
    }
}

<Paginator
itemsPerPage=pageSize
itemCount=totalPosts
pagesPerDirection=PAGES_PER_DIRECTION
page=page
pageRootPath=@($"/forum/posts/{topicName}")
/>

@code {
    private int pageSize;
    private const int PAGES_PER_DIRECTION = 3;
    private bool logged;

    [Parameter]
    public string topicName { get; set; }
    [Parameter]
    public int page { get; set; }

    private int totalPosts;
    private List<ForumPost> posts;
    private ForumTopic forumTopic;

    protected override async Task OnInitializedAsync()
    {
        pageSize = Config.Value.ForumPageSize;
        forumTopic = await Http.GetFromJsonAsync<ForumTopic>($"/api/Topic/GetTopic/{topicName}");
        totalPosts = await Http.GetFromJsonAsync<int>($"/api/Post/GetPostCount/{topicName}");
        posts = await Http.GetFromJsonAsync<List<ForumPost>>($"/api/Post/GetPosts/{topicName}/{page}/{pageSize}");
    }
    private async Task StartNewPost()
    {
        string uri = Navigate.GetUriWithQueryParameters($"/forum/new-post/{topicName}", new Dictionary<string, object?> { ["ReturnUrl"] = Navigate.Uri });
        Navigate.NavigateTo(uri, forceLoad: true);
    }
}