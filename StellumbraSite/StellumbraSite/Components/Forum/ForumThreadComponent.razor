@using StellumbraSite.Data
@using StellumbraSite.Shared.Model
@using StellumbraSite.Components.Text

@inject HttpClient HttpClient;

<div style="@Style" class="forum-listed-content">
    @if (threadUserData != null)
    {
        <!-- TODO: Replace redundant 'style' css here. Same as ForumThreadComponent.-->
        <div style="display: flex; flex-direction: row; gap: 12px">
            <img width="48" height="48" src="@threadUserData.ProfilePicturePath" alt="images/profile0.png" />
            <DosP>
                @threadUserData.Username
            </DosP>
        </div>

        <div style="margin-left: 60px;">
            <DosP>
                @((MarkupString)Thread.Content)
            </DosP>
            <DosP FontSize="12">
                @Thread.DateTime
            </DosP>
        </div>
    }

    <!-- TODO: Allow admins to delete threads but not if that thread is an owner thread. -->
    @if (ViewingUserId == Thread.PosterID || ViewingUserRole == "Owner")
    {
        <button @onclick="() => OnClickDelete.InvokeAsync(Thread)">
            X
        </button>
    }
</div>

@code {
    [Parameter]
    [EditorRequired]
    public ForumThread Thread { get; set; }
    [Parameter]
    [EditorRequired]
    public string ViewingUserId { get; set; }
    [Parameter]
    [EditorRequired]
    public string ViewingUserRole { get; set; }
    [Parameter]
    public EventCallback<ForumThread> OnClickDelete { get; set; }
    [Parameter]
    public string Style { get; set; } = string.Empty;

    private UserData threadUserData;

    protected override async Task OnInitializedAsync()
    {
        threadUserData = await HttpClient.GetFromJsonAsync<UserData>($"/api/User/GetUserData/{Thread.PosterID}");
    }
}
