@inject IJSRuntime JS

@using StellumbraSite.Data
@using StellumbraSite.Components.Buttons

<div>
    <div id="@EditorId" style="height: 300px; background-color: rgb(10, 10, 10); border-right: solid 2px #00ff58; border-left: solid 2px #00ff58; border-bottom: solid 2px #00ff58" />
    <div style="margin-top: 1rem; margin-bottom: 1rem;">
        <CustomFuncButton OnClick="Submit">
            Submit
        </CustomFuncButton>
    </div>
</div>

@code {
    [Parameter]
    [EditorRequired]
    public EventCallback OnClick { get; set; }
    private string EditorId = "editor";
    public string HtmlContent;

    private ValueTask<string> submitTask;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("quillEditor.initialize", EditorId);
        }
    }
    private async Task Submit()
    {
        try
        {
            submitTask = JS.InvokeAsync<string>("quillEditor.onSubmit");
            HtmlContent = await submitTask;
            await OnClick.InvokeAsync();
        }
        catch (Exception e)
        {
            Console.WriteLine($"Submit failed: {e.Message}");
        }
    }
    public async Task<string> GetQuillHTMLContent()
    {
        if (submitTask == default)
        { 
            throw new Exception("Must submit first");
        }

        await submitTask;

        return HtmlContent;
    }
}